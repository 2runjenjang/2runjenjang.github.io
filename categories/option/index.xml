<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevToKKi – option</title>
    <link>https://www.devtokki.com/categories/option/</link>
    <description>Recent content in option on DevToKKi</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 22 Apr 2022 13:45:54 +0900</lastBuildDate>
    
	  <atom:link href="https://www.devtokki.com/categories/option/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Data-Platform: 프로듀서 기본 동작 및 주요 옵션</title>
      <link>https://www.devtokki.com/data-platform/apache-kafka/kafka-basic-and-structure/kafka-producer-overview/</link>
      <pubDate>Fri, 22 Apr 2022 08:23:39 +0900</pubDate>
      
      <guid>https://www.devtokki.com/data-platform/apache-kafka/kafka-basic-and-structure/kafka-producer-overview/</guid>
      <description>
        
        
        &lt;figure&gt;
  &lt;p align=&#34;center&#34;&gt;
    &lt;img src=&#34;https://www.devtokki.com/data/data_platform/apache_kafka/kafka_basic_and_structure/producer.png&#34;&gt;
  &lt;/p&gt;
  &lt;figcaption align=&#34;center&#34;&gt;프로듀서 디자인 개요(출처: https://dzone.com/articles/take-a-deep-dive-into-kafka-producer-api/)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&#34;기본-동작&#34;&gt;기본 동작&lt;/h4&gt;
&lt;p&gt;ProducerRecord라고 표시된 부분은 카프카로 전송하기 위한 실제 데이터이며, 레코드는 토픽, 파티션, 키, 밸류로 구성 됨.&lt;/p&gt;
&lt;p&gt;프로듀서가 카프카로 레코드를 전송할 때, 카프카의 특정 토픽으로 메시지를 전송하기 때문에 &lt;strong&gt;레코드에서 토픽과 밸류(메시지 내용)는 필수 값&lt;/strong&gt;이며, &lt;strong&gt;특정 파티션을 지정하기 위한 레코드의 파티션과 특정 파티션에 레코드들을 정렬하기 위한 레코드의 키는 선택사항(옵션)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;각 레코드들은 프로듀서의 send() 메소드를 통해 시리얼라이저(serializer), 파티셔너(partitioner)를 거침.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프로듀서 레코드의 파티션을 지정했을 경우&lt;br&gt; &amp;ndash;&amp;gt; 파티셔너는 아무 동작하지 않고 지정된 파티션으로 레코드를 전달.&lt;/li&gt;
&lt;li&gt;프로듀서 레코드의 파티션을 지정 안했을 경우&lt;br&gt; &amp;ndash;&amp;gt; 키를 가지고 파티션을 선택해 레코드를 전달 함. 기본적으로 라운드 로빈(round robin) 방식으로 동작.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;send() 메소드 동작 이후 &lt;strong&gt;레코드들을 파티션별로 잠시 모아 둠&lt;/strong&gt;. 모아둔 이유는 프로듀서가 카프카로 전송하기 전, &lt;strong&gt;배치 전송&lt;/strong&gt;하기 위함.&lt;/p&gt;
&lt;p&gt;전송이 실패하면 재시도 동작이 이뤄지고, 지정된 횟수 만큼의 재시도가 실패하면 최종 실패 전달. 전송이 성공하면 메타데이터를 리턴하게 됨.&lt;/p&gt;
&lt;h3 id=&#34;프로듀서-주요-옵션&#34;&gt;프로듀서 주요 옵션&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Producer Option&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;bootstrap.servers&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;카프카 클러스터는 클러스터 마스터라는 개념이 없으므로, 클러스터 내 모든 서버가 클라이언트의 요청을 받을 수 있음. 클라이언트가 카프카 클러스터에 처음 연결하기 위한 호스트와 포트정보를 나타 냄.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;client.dns.lookup&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;하나의 호스트에 여러 IP를 매핑해 사용하는 일부 환경에서 클라이언트가 하나의 IP와 연결하지 못할 경우에 다른 IP로 시도하는 설정. use_all_dns_ips가 기본값으로, DNS에 할당된 호스트의 모든 IP를 쿼리하고 저장. 첫 번째 IP로 접근 실패 시, 종료하지 않고 다음 IP로 접근 시도. &lt;em&gt;resolve_canonical_bootstrap_servers_only&lt;/em&gt; 옵션은 Kerberos 환경에서 FQDN을 얻기 위한 용도로 사용 됨.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;acks&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;프로듀서가 카프카 토픽의 리더 측에 메시지를 전송한 후 요청을 완료하기를 결정하는 옵션. 0, 1, all(-1)로 표현하며, 0은 빠른 전송을 의미하지만, 일부 메시지 손실 가능성 있음. 1은 리더가 메시지를 받았는지 확인하지만, 모든 팔로워를 전부 확인하지 않음. 대부분 기본값으로 1을 사용. all은 팔로워가 메시지를 받았는지 여부 확인. 다소 느릴 수 있으나 하나의 팔로우가 있는 한 메시지 손실은 없음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;buffer.memory&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;프로듀서가 카프카 서버로 데이터를 보내기 위해 잠시 대기(배치 전송이나 딜레이 등)할 수 있는 전체 메모리 바이트(byte)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;compression.type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;프로듀서가 메시지 전송 시 선택할 수 있는 압축 타입. none, gzip, snappy, lz4, zstd 중 선택&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;enbale.idempotence&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;설정을 true로 하는 경우 중복 없는 전송이 가능하며, 이와 동시에 &lt;em&gt;max.in.flight.requests.per.connection&lt;/em&gt;은 5 이하, &lt;em&gt;retries&lt;/em&gt;는 0 이상, &lt;em&gt;acks&lt;/em&gt;는 all로 설정해야 함.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max.in.flight.requests.per.connection&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;하나의 커넥션에서 프로듀서가 최대한 ACK 없이 전송할 수 있는 요청 수. 메시지의 순서가 중요하다면 1로 설정할 것을 권장하지만 성능은 다소 떨어짐.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;retries&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;일시적인 오류로 인해 전송에 실패한 데이터를 다시 보내주는 횟수&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;batch.size&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;프로듀서는 동일한 파티션으로 보내는 여러 데이터를 함께 배치로 보내려고 시도. 적절한 배치 크기 설정은 성능에 도움을 줌.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;linger.ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;배치 형태의 메시지를 보내기 전 추가적인 메시지를 위해 기다리는 시간을 조정하고, 배치 크기에 도달하지 못한 상황에서 linger.ms 제한 시간에 도달 했을 때 메시지를 전송.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;transactional.id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;lsquo;정확히 한 번 전송&amp;rsquo;을 위해 사용하는 옵션. 동일한 TransactionalId에 한해 정확히 한 번을 보장. 옵션을 사용하기 전 &lt;em&gt;enable.idempotence&lt;/em&gt;를 true로 설정해야 함.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Data-Platform: 컨슈머 기본 동작 및 주요 옵션</title>
      <link>https://www.devtokki.com/data-platform/apache-kafka/kafka-basic-and-structure/kafka-consumer-overview/</link>
      <pubDate>Fri, 22 Apr 2022 13:45:54 +0900</pubDate>
      
      <guid>https://www.devtokki.com/data-platform/apache-kafka/kafka-basic-and-structure/kafka-consumer-overview/</guid>
      <description>
        
        
        &lt;p&gt;컨슈머는 카프카의 토픽에 저장되어 있는 메시지를 가져오는 역할을 담당. 단순하게 메시지만 가져오는 기능만 하는 것이 아니라 내부적으로는 컨슈머 그룹, 리밸런싱 등 여러 동작을 수행 함.&lt;/p&gt;
&lt;h4 id=&#34;기본-동작&#34;&gt;기본 동작&lt;/h4&gt;
&lt;p&gt;프로듀서가 카프카의 토픽으로 메시지를 전송하면 해당 메시지들은 브로커들의 로컬 디스크에 저장되며 컨슈머를 이용해 토픽에 저장된 메시지를 가져올 수 있음.&lt;/p&gt;
&lt;p&gt;컨슈머 그룹은 하나 이상의 컨슈머들이 모여 있는 그룹을 의미하고, 컨슈머는 반드시 컨슈머 그룹에 속하게 됨. 그리고 컨슈머 그룹은 각 파티션의 리더에게 카프카 토픽에 저장된 메시지를 가져오기 위한 요청을 보냄.&lt;/p&gt;
&lt;p&gt;이때 파티션 수와 컨슈머 수(하나의 컨슈머 그룹 안에 있는 컨슈머 수)는 1:1로 매핑되는 것이 이상적 임.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;i class=&#34;fa fa-exclamation-triangle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; 주의:&lt;/strong&gt; 파티션 수와 컨슈머 수의 비율을 반드시 1:1로 매핑해야 하는 것은 아니지만, 파티션 수보다 더 많다고 해서 &lt;strong&gt;더 빠르게 토픽의 메시지를 가져오거나 처리량이 높아지는 것이 아니라 더 많은 수의 컨슈머들이 대기 상태로 존재&lt;/strong&gt;하기 때문.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;컨슈머-주요-옵션&#34;&gt;컨슈머 주요 옵션&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Consumer Option&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;bootstrap.servers&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;프로듀서와 동일하게 브로커의 정보를 입력.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fetch.min.bytes&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;한 번에 가져올 수 있는 최소 데이터 크기. 지정한 크기보다 작은 경우, 요청에 응답하지 않고 데이터가 누적될 때까지 대기.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;group.id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;컨슈머가 속한 컨슈머 그룹을 식별하는 식별자. 동일한 그룹 내의 컨슈머 정보는 모두 공유 됨.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;heartbeat.interval.ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;하트 비트가 있다는 것은 컨슈머의 상태가 active임을 의미. &lt;em&gt;session.timeout.ms&lt;/em&gt;와 밀접한 관계가 있으며, &lt;em&gt;session.timeout.ms&lt;/em&gt;보다 낮은 값으로 설정해야 함. 일반적으로 &lt;em&gt;session.timeout.ms&lt;/em&gt;의 1/3로 설정.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max.partition.fetch.bytes&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;파티션 당 가져올 수 있는 최대 크기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;session.timeout.ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;이 옵션을 이용해, 컨슈머가 종료된 것인지를 판단. 컨슈머는 주기적으로 하트 비트를 보내야 하고, 만약 이 시간 전까지 하트 비트를 보내지 않았다면 해당 컨슈머는 종료된 것으로 간주하고 컨슈머 그룹에서 제외 후, 리밸런싱을 시작 함.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;enable.auto.commit&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;백그라운드로 주기적으로 오프셋을 커밋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;auto.offset.reset&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;카프카에서 초기 오프셋이 없거나 현재 오프셋이 더 이상 존재하지 않는 경우에 다음 옵션으로 reset 함. &lt;ul&gt;&lt;li&gt;earliest: 가장 초기의 오프셋값으로 설정&lt;/li&gt;&lt;li&gt;latest: 가장 마지막 오프셋값으로 설정&lt;/li&gt;&lt;li&gt;none: 이전 오프셋값을 찾지 못하면 에러를 나타냄.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fetch.max.bytes&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;한 번의 가져오기 요청으로 가져올 수 있는 최대 크기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;group.instance.id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;컨슈머의 고유 식별자. 만약 설정한다면 static 멤버로 간주되어, 불필요한 리밸런싱을 하지 않음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;isolation.level&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;트랜잭션 컨슈머에서 사용되는 옵션. &lt;ul&gt;&lt;li&gt;read_uncommited(Default) : 모든 메시지를 읽음&lt;/li&gt;&lt;li&gt;read_committed : 트랜잭션이 완료된 메시지만 읽음&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max.poll.records&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;한 번의 poll() 요청으로 가져오는 최대 메시지 수.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;partition.assignment.strategy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;파티션 할당 전략.(Default : range)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fetch.max.wait.ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;fetch.min.bytes&lt;/em&gt;에 의해 설정된 데이터보다 적은 경우 요청에 대한 응답을 기다리는 최대 시간.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
