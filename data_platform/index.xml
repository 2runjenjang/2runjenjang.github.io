<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevToKKi – Data Platform</title>
    <link>https://www.devtokki.com/data_platform/</link>
    <description>Recent content in Data Platform on DevToKKi</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://www.devtokki.com/data_platform/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Data_platform: 카프카를 구성하는 주요 요소</title>
      <link>https://www.devtokki.com/data_platform/apache_kafka/kafka_basic_and_structure/%EC%B9%B4%ED%94%84%EC%B9%B4%EB%A5%BC_%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94_%EC%A3%BC%EC%9A%94_%EC%9A%94%EC%86%8C/</link>
      <pubDate>Sun, 17 Apr 2022 03:40:29 +0900</pubDate>
      
      <guid>https://www.devtokki.com/data_platform/apache_kafka/kafka_basic_and_structure/%EC%B9%B4%ED%94%84%EC%B9%B4%EB%A5%BC_%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94_%EC%A3%BC%EC%9A%94_%EC%9A%94%EC%86%8C/</guid>
      <description>
        
        
        &lt;h3 id=&#34;카프카-주요-요소&#34;&gt;카프카 주요 요소&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;주키퍼(Zookeeper) : 아파치 프로젝트 애플리케이션 이름으로 &lt;U&gt;&lt;strong&gt;카프카의 메타데이터(metadata) 관리 및 브로커의 정상 상태 점검(health check)을 담당&lt;/strong&gt;&lt;/U&gt;&lt;/li&gt;
&lt;li&gt;카프카(Kafka) 또는 카프카 클러스터(Kafka cluster) : 아파치 프로젝트 애플리케이션 이름으로 &lt;U&gt;&lt;strong&gt;여러 대의 브로커를 구성한 클러스터를 의미&lt;/strong&gt;&lt;/U&gt;&lt;/li&gt;
&lt;li&gt;브로커(Broker): 카프카 애플리케이션이 설치된 &lt;U&gt;&lt;strong&gt;서버 또는 노드&lt;/strong&gt;&lt;/U&gt;를 칭함&lt;/li&gt;
&lt;li&gt;프로듀서(Producer) : 카프카로 &lt;U&gt;&lt;strong&gt;메시지를 보내는 역할&lt;/strong&gt;&lt;/U&gt;을 하는 클라이언트를 총칭&lt;/li&gt;
&lt;li&gt;컨슈머(Consumer) : 카프카에서 &lt;U&gt;&lt;strong&gt;메시지를 꺼내가는 역할&lt;/strong&gt;&lt;/U&gt;을 하는 클라이언트 총칭&lt;/li&gt;
&lt;li&gt;토픽(Topic) : 카프카는 &lt;U&gt;&lt;strong&gt;메시지 피드들을 토픽으로 구분&lt;/strong&gt;&lt;/U&gt;하고, 각 &lt;U&gt;&lt;strong&gt;토픽의 이름은 카프카 내에서 고유&lt;/strong&gt;&lt;/U&gt; 함.&lt;/li&gt;
&lt;li&gt;파티션(Partition) : 병렬 처리 및 고성능을 얻기 위해 &lt;U&gt;&lt;strong&gt;하나의 토픽을 여러 개로 나눈 것&lt;/strong&gt;&lt;/U&gt;을 말함.&lt;/li&gt;
&lt;li&gt;세그먼트(Segment) :  프로듀서가 전송한 실제 메시지가 &lt;U&gt;&lt;strong&gt;브로커의 로컬 디스크에 저장되는 파일&lt;/strong&gt;&lt;/U&gt;을 말함.&lt;/li&gt;
&lt;li&gt;메시지(Message) 또는 레코드(Record) : 프로듀서가 브로커로 전송하거나 컨슈머가 &lt;U&gt;&lt;strong&gt;읽어가는 데이터 조각&lt;/strong&gt;&lt;/U&gt;을 말함.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Data_platform: 리플리케이션(replication)</title>
      <link>https://www.devtokki.com/data_platform/apache_kafka/kafka_basic_and_structure/%EB%A6%AC%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/</link>
      <pubDate>Sun, 17 Apr 2022 23:28:34 +0900</pubDate>
      
      <guid>https://www.devtokki.com/data_platform/apache_kafka/kafka_basic_and_structure/%EB%A6%AC%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/</guid>
      <description>
        
        
        &lt;p&gt;peter-overview01 토픽을 리플리케이션 팩터 수 3으로 설정하여 각 브로커에 배치된 상태를 보여줌.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devtokki.com/data/data_platform/apache_kafka/kafka_basic_and_structure/%eb%a6%ac%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%981.png&#34; alt=&#34;peter-overview01 토픽을 리플리케이션 팩터 수 3으로 설정하여 각 브로커에 배치된 상태를 보여줌.&#34;  /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;안전성을 목적으로 모든 토픽에 대해 각 3개의 리플리케이션으로 설정 할 수 있음.&lt;/li&gt;
&lt;li&gt;리플리케이션 팩터수가 커지면 안정성은 높아지지만 그만큼 브로커 리소스를 많이 사용하게 됨.&lt;/li&gt;
&lt;li&gt;복제에 대한 오버헤드를 줄여서 최대한 브로커를 효율적으로 사용하는 것을 권장&lt;/li&gt;
&lt;li&gt;토픽 생성시 기준
&lt;ul&gt;
&lt;li&gt;테스트 개발 환경 : 리플리케이션 팩터 수를 1로 설정&lt;/li&gt;
&lt;li&gt;운영 환경(로그성 메시지로서 약간의 유실 허용) : 리플레케이션 팩터 수를 2로 설정&lt;/li&gt;
&lt;li&gt;운영 환경(유실 허용하지 않음) : 리플리케이션 팩터 수를 3으로 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;안정성을 높이기 위해 리플리케이션 팩터 수를 4 이상 설정 할 수 있지만 경험상 3일 경우 충분히 메시지 안정성도 보장하고 적절한 디스크 공간을 사용할 수 있었음.&lt;/li&gt;
&lt;li&gt;리플리케이션 팩터 수를 4 이상으로 설정시 디스크 공간을 많이 사용하기 때문에 이 점을 염두해서 사용 할 것.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
